{"version":3,"sources":["redux/clientActions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","components/App.js","redux/rootReducer.js","redux/store.js","index.js","components/ContactList/Contact.module.css"],"names":["ADD_CONTACT","REMOVE_CONTACT","FILTER_CONTACT","addNewContact","createAction","removeContact","filterContact","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","reset","this","onSubmit","type","pattern","placeholder","onChange","disabled","length","Component","mapDispatchToProps","connect","ownProps","ContactListItem","onRemove","className","styles","button","onClick","getVisibleContacts","contacts","filter","toLowerCase","includes","list","map","evt","Section","title","children","App","updated","addContact","newName","names","console","log","alert","todos","localStorage","getItem","parse","JSON","prevProps","prevState","setItem","stringify","rootReducer","combineReducers","action","payload","item","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a24090a9.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const ADD_CONTACT = \"contact/add\";\r\nexport const REMOVE_CONTACT = \"contact/remove\";\r\nexport const FILTER_CONTACT = \"contact/filter\";\r\nconst addNewContact = createAction(ADD_CONTACT);\r\nconst removeContact = createAction(REMOVE_CONTACT);\r\nconst filterContact = createAction(FILTER_CONTACT);\r\n\r\n// const addNewContact = client => ({\r\n//   type: ADD_CONTACT,\r\n//   payload: client\r\n// });\r\n// const removeContact = id => ({\r\n//   type: REMOVE_CONTACT,\r\n//   payload: id\r\n// });\r\n// const filterContact = payload => ({\r\n//   type: FILTER_CONTACT,\r\n//   payload\r\n// });\r\nexport { addNewContact, removeContact, filterContact };\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { connect } from \"react-redux\";\r\nimport { addNewContact } from \"../../redux/clientActions\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number\r\n    };\r\n    this.props.addNewContact(contact);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            placeholder=\"Name...\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number:\r\n          <input type=\"tell\" value={number} name=\"number\" placeholder=\"Number...\" onChange={this.handleChange} />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\" disabled={!name.length || !number.length}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => ({});\r\nconst mapDispatchToProps = {\r\n  addNewContact\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContactForm);\r\n\r\n// ContactForm.propTypes = {\r\n//   addContact: PropTypes.func.isRequired\r\n// };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../ContactList/Contact.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => {\r\n  return (\r\n    <>\r\n      <li>\r\n        {name} : {number}\r\n      </li>\r\n\r\n      <button className={styles.button} type=\"button\" onClick={onRemove}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport styles from \"../ContactList/Contact.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/clientActions\";\r\n\r\nconst ContactList = ({ contacts, removeContact }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem key={id} name={name} number={number} onRemove={() => removeContact(id)} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired\r\n      })\r\n    ),\r\n    PropTypes.array\r\n  ]),\r\n  onRemove: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  removeContact\r\n};\r\nconst getVisibleContacts = state => {\r\n  const { contacts, filter } = state;\r\n  if (contacts.length) {\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n  }\r\n};\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  contacts: getVisibleContacts(state)\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterContact } from \"../../redux/clientActions\";\r\n\r\nconst Filter = ({ onChange, filter }) => {\r\n  return (\r\n    <>\r\n      Find contacts by name:\r\n      <input placeholder=\"Search...\" value={filter} type=\"text\" name=\"filter\" onChange={onChange} />\r\n    </>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  filter: state.filter\r\n});\r\nconst mapDispatchToProps = {\r\n  onChange: evt => filterContact(evt.target.value)\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addNewContact, removeContact } from \"../redux/clientActions\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport Section from \"./Section/Section\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\r\n    ],\r\n    filter: \"\"\r\n  };\r\n  componentDidMount() {\r\n    const todos = localStorage.getItem(\"contacts\");\r\n    const parse = JSON.parse(todos);\r\n    if (parse) {\r\n      this.setState({ contacts: parse });\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  removeContact = id => {\r\n    const { contacts } = this.state;\r\n    const updated = contacts.filter(contact => contact.id !== id);\r\n    this.setState({\r\n      contacts: [...updated]\r\n    });\r\n  };\r\n\r\n  addContact = contact => {\r\n    const newName = contact.name;\r\n    const names = this.state.contacts.map(contact => contact.name.toLowerCase());\r\n    console.log(names);\r\n    if (names.includes(newName.toLowerCase())) {\r\n      alert(`${newName} is already in contact list`);\r\n    } else {\r\n      this.setState(state => ({\r\n        contacts: [...state.contacts, contact]\r\n      }));\r\n    }\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.props;\r\n    if (contacts.length) {\r\n      return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { contacts } = this.props;\r\n    return (\r\n      <>\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          {contacts.length > 1 && <Filter onChange={this.handleChange} />}\r\n          {contacts.length ? <ContactList /> : <p>There are no contacts here</p>}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  contacts: state.contacts,\r\n  filter: state.filter\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addNewContact,\r\n  removeContact\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { ADD_CONTACT, FILTER_CONTACT, REMOVE_CONTACT } from \"./clientActions\";\r\n// { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n// { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n// { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n// { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\r\nconst clientsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      return [...state, action.payload];\r\n    case REMOVE_CONTACT:\r\n      return state.filter(item => item.id !== action.payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst filterReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case FILTER_CONTACT:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst rootReducer = combineReducers({\r\n  contacts: clientsReducer,\r\n  filter: filterReducer\r\n});\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./rootReducer\";\r\n// const initionalState = () => ({\r\n//   contacts: [\r\n// { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n// { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n// { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n// { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\r\n//   ]\r\n// });\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport store from \"./redux/store\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__oQbmj\",\"list\":\"Contact_list__1LCCB\"};"],"sourceRoot":""}